<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="register_8c" kind="file" language="C++">
    <compoundname>register.c</compoundname>
    <includes local="no">linux/slab.h</includes>
    <includes local="no">net/genetlink.h</includes>
    <includes refid="qu__netlink_8h" local="yes">qu_netlink.h</includes>
    <includes refid="register_8h" local="yes">register.h</includes>
    <includes refid="types_8h" local="yes">types.h</includes>
    <includes local="no">linux/kernel.h</includes>
    <includes local="no">linux/module.h</includes>
    <includes local="no">linux/string.h</includes>
    <incdepgraph>
      <node id="4">
        <label>qu_netlink.h</label>
        <link refid="qu__netlink_8h"/>
      </node>
      <node id="1">
        <label>src/register.c</label>
        <link refid="register_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>register.h</label>
        <link refid="register_8h"/>
      </node>
      <node id="6">
        <label>types.h</label>
        <link refid="types_8h"/>
      </node>
      <node id="7">
        <label>linux/kernel.h</label>
      </node>
      <node id="8">
        <label>linux/module.h</label>
      </node>
      <node id="2">
        <label>linux/slab.h</label>
      </node>
      <node id="9">
        <label>linux/string.h</label>
      </node>
      <node id="3">
        <label>net/genetlink.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int qu_devices_allocated</definition>
        <argsstring></argsstring>
        <name>qu_devices_allocated</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="13" column="5" bodyfile="src/register.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" prot="public" static="no" mutable="no">
        <type><ref refid="structqu__device" kindref="compound">qu_device</ref> *</type>
        <definition>qu_device* qu_devices</definition>
        <argsstring></argsstring>
        <name>qu_devices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="15" column="11" bodyfile="src/register.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="register_8c_1a81c65049221c30c77ebfa6ed5e4b2838" prot="public" static="no" mutable="no">
        <type>struct mutex</type>
        <definition>struct mutex qu_dev_mutex</definition>
        <argsstring></argsstring>
        <name>qu_dev_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="16" column="12" bodyfile="src/register.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" prot="public" static="no" mutable="no">
        <type><ref refid="structqu__device" kindref="compound">qu_device</ref></type>
        <definition>qu_device control_module</definition>
        <argsstring></argsstring>
        <name>control_module</name>
        <initializer>= {.type = <ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="18" column="11" bodyfile="src/register.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="register_8c_1a36f6e8f51c49c00548335699f2e8d5f8" prot="public" static="no" mutable="no">
        <type>struct mutex</type>
        <definition>struct mutex controller_module</definition>
        <argsstring></argsstring>
        <name>controller_module</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="19" column="12" bodyfile="src/register.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="register_8c_1a03ae670e432d5469a6409edf63703028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="register_8h_1add57988c892c423bff906e04292510df" kindref="member">DEVICE_TYPE</ref></type>
        <definition>DEVICE_TYPE msg_to_DEVICE_TYPE</definition>
        <argsstring>(int *n)</argsstring>
        <name>msg_to_DEVICE_TYPE</name>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="22" column="13" bodyfile="src/register.c" bodystart="22" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1ac76320e2b7fb3b31808d9f83ddf7f879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void register_control_module</definition>
        <argsstring>(struct qu_device qu_control_module)</argsstring>
        <name>register_control_module</name>
        <param>
          <type>struct <ref refid="structqu__device" kindref="compound">qu_device</ref></type>
          <declname>qu_control_module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="33" column="6" bodyfile="src/register.c" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1a455b15ec8fbbc1ca798dcdb2b785adc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void deregister_control_module</definition>
        <argsstring>(struct qu_device qu_control_module)</argsstring>
        <name>deregister_control_module</name>
        <param>
          <type>struct <ref refid="structqu__device" kindref="compound">qu_device</ref></type>
          <declname>qu_control_module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="37" column="6" bodyfile="src/register.c" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1a99083653126e569979517c569092d282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int empty_device_slots</definition>
        <argsstring>(void)</argsstring>
        <name>empty_device_slots</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="44" column="5" bodyfile="src/register.c" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1a749e78f7da7428b29fa80e380ec95cfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int register_device</definition>
        <argsstring>(struct qu_device qudev)</argsstring>
        <name>register_device</name>
        <param>
          <type>struct <ref refid="structqu__device" kindref="compound">qu_device</ref></type>
          <declname>qudev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="54" column="5" bodyfile="src/register.c" bodystart="54" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1a9fcb25e4070e6b3292a964056babb4c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int deregister_device</definition>
        <argsstring>(struct qu_device qu_dev, int *id)</argsstring>
        <name>deregister_device</name>
        <param>
          <type>struct <ref refid="structqu__device" kindref="compound">qu_device</ref></type>
          <declname>qu_dev</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="86" column="5" bodyfile="src/register.c" bodystart="86" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int register_response</definition>
        <argsstring>(int assigned_device_id, struct sk_buff *request, struct genl_info *info, char *msg)</argsstring>
        <name>register_response</name>
        <param>
          <type>int</type>
          <declname>assigned_device_id</declname>
        </param>
        <param>
          <type>struct <ref refid="command_8h_1ae16c92b8b9283dc0983900820c5834b2" kindref="member">sk_buff</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>struct <ref refid="command_8h_1a74a1d25a0884e5f20b60a1f1a719abf8" kindref="member">genl_info</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="113" column="5" bodyfile="src/register.c" bodystart="113" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1ad45ce3338ecbad4fd7f41b59b09aef94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int register_with_simulation_control_module</definition>
        <argsstring>(int assigned_device_id, struct genl_info *info, char *msg)</argsstring>
        <name>register_with_simulation_control_module</name>
        <param>
          <type>int</type>
          <declname>assigned_device_id</declname>
        </param>
        <param>
          <type>struct <ref refid="command_8h_1a74a1d25a0884e5f20b60a1f1a719abf8" kindref="member">genl_info</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="164" column="5" bodyfile="src/register.c" bodystart="164" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1a190220f2a20542bd2788f9488b0c66c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gnl_qu_net_register_doit</definition>
        <argsstring>(struct sk_buff *sender_skb, struct genl_info *info)</argsstring>
        <name>gnl_qu_net_register_doit</name>
        <param>
          <type>struct <ref refid="command_8h_1ae16c92b8b9283dc0983900820c5834b2" kindref="member">sk_buff</ref> *</type>
          <declname>sender_skb</declname>
        </param>
        <param>
          <type>struct <ref refid="command_8h_1a74a1d25a0884e5f20b60a1f1a719abf8" kindref="member">genl_info</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="222" column="5" bodyfile="src/register.c" bodystart="222" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="register_8c_1abdabf9dde5da39300c8e4a78ce7e6748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gnl_qu_net_deregister_doit</definition>
        <argsstring>(struct sk_buff *sender_skb, struct genl_info *info)</argsstring>
        <name>gnl_qu_net_deregister_doit</name>
        <param>
          <type>struct <ref refid="command_8h_1ae16c92b8b9283dc0983900820c5834b2" kindref="member">sk_buff</ref> *</type>
          <declname>sender_skb</declname>
        </param>
        <param>
          <type>struct <ref refid="command_8h_1a74a1d25a0884e5f20b60a1f1a719abf8" kindref="member">genl_info</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/register.c" line="298" column="5" bodyfile="src/register.c" bodystart="298" bodyend="373"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/slab.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;net/genetlink.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qu__netlink_8h" kindref="compound">qu_netlink.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="register_8h" kindref="compound">register.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/kernel.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>doing<sp/>kernel<sp/>work<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/module.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Specifically,<sp/>a<sp/>module<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Is<sp/>memory<sp/>for<sp/>qu_devices<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" kindref="member">qu_devices_allocated</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/>*<ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">mutex<sp/><ref refid="register_8c_1a81c65049221c30c77ebfa6ed5e4b2838" kindref="member">qu_dev_mutex</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/><ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref><sp/>=<sp/>{.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">mutex<sp/><ref refid="register_8c_1a36f6e8f51c49c00548335699f2e8d5f8" kindref="member">controller_module</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Conversion<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="register_8h_1add57988c892c423bff906e04292510df" kindref="member">DEVICE_TYPE</ref><sp/><ref refid="register_8c_1a03ae670e432d5469a6409edf63703028" kindref="member">msg_to_DEVICE_TYPE</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*n)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa00e388716ff3da418e5aff724f3bb482" kindref="member">SIMULATION_CONTROL_MODULE</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa827b4082fd9c9336348abc0b84843ec5" kindref="member">QUANTUM_NETWORK_DEVICE</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="register_8c_1ac76320e2b7fb3b31808d9f83ddf7f879" kindref="member">register_control_module</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/>qu_control_module)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref><sp/>=<sp/>qu_control_module;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="register_8c_1a455b15ec8fbbc1ca798dcdb2b785adc4" kindref="member">deregister_control_module</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/>qu_control_module)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref>.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>there<sp/>are<sp/>empty<sp/>slots<sp/>in<sp/>the<sp/>device<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>no<sp/>new<sp/>memory<sp/>will<sp/>be<sp/>allocated<sp/>if<sp/>there<sp/>are<sp/>empty<sp/>slots<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Room<sp/>for<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="register_8c_1a99083653126e569979517c569092d282" kindref="member">empty_device_slots</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" kindref="member">qu_devices_allocated</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref>[i].type<sp/>==<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Empty<sp/>device<sp/>slot<sp/>found<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="register_8c_1a749e78f7da7428b29fa80e380ec95cfb" kindref="member">register_device</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/>qudev)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deal<sp/>with<sp/>the<sp/>dynamically<sp/>sized<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alloc_index;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>alloc_index<sp/>=<sp/><ref refid="register_8c_1a99083653126e569979517c569092d282" kindref="member">empty_device_slots</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alloc_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" kindref="member">qu_devices_allocated</ref><sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>allocated<sp/>allocate<sp/>array<sp/>with<sp/>size<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Malloc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref><sp/>=<sp/>kmalloc(1<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structqu__device" kindref="compound">qu_device</ref>),<sp/>GFP_KERNEL);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>allocated<sp/>resize<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref><sp/>=</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>krealloc(<ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref>,<sp/>(<ref refid="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" kindref="member">qu_devices_allocated</ref><sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structqu__device" kindref="compound">qu_device</ref>),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GFP_KERNEL);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" kindref="member">qu_devices_allocated</ref>++;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc_index<sp/>=<sp/><ref refid="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" kindref="member">qu_devices_allocated</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>device<sp/>to<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>(<ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref>)[alloc_index]<sp/>=<sp/>qudev;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Currently<sp/>%d<sp/>devices<sp/>registered!&quot;</highlight><highlight class="normal">,<sp/><ref refid="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" kindref="member">qu_devices_allocated</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>mutex_unlock(&amp;<ref refid="register_8c_1a81c65049221c30c77ebfa6ed5e4b2838" kindref="member">qu_dev_mutex</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>and<sp/>length<sp/>are<sp/>two<sp/>different<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alloc_index;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>deregister_device()</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>Changes<sp/>the<sp/>device<sp/>to<sp/>NOT_A_DEVICE<sp/>and<sp/>lets<sp/>the<sp/>simulation<sp/>control<sp/>module</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>know<sp/>that<sp/>this<sp/>device<sp/>disconnected</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="register_8c_1a9fcb25e4070e6b3292a964056babb4c4" kindref="member">deregister_device</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/>qu_dev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>mutex_lock(&amp;<ref refid="register_8c_1a81c65049221c30c77ebfa6ed5e4b2838" kindref="member">qu_dev_mutex</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;<sp/><ref refid="register_8c_1aa80528cdeb87e7dbae69859a4b1db8ea" kindref="member">qu_devices_allocated</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;This<sp/>id<sp/>is<sp/>not<sp/>assigned;<sp/>No<sp/>device<sp/>deregistered!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref>[*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].type<sp/>==<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;Device<sp/>with<sp/>this<sp/>id<sp/>already<sp/>deregistered!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qu_dev.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref>.snd_portid<sp/>==<sp/><ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref>[*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref>.snd_portid)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="register_8c_1a297e3ba955f4221edee8c4ce5f60ed30" kindref="member">qu_devices</ref>[*id].<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;The<sp/>device<sp/>and<sp/>PID<sp/>do<sp/>not<sp/>match&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>mutex_unlock(&amp;<ref refid="register_8c_1a81c65049221c30c77ebfa6ed5e4b2838" kindref="member">qu_dev_mutex</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>Function<sp/>that<sp/>sends<sp/>back<sp/>the<sp/>success<sp/>flag<sp/>of<sp/>the<sp/>register/unregister</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>operation</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>assigned_device_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="command_8h_1ae16c92b8b9283dc0983900820c5834b2" kindref="member">sk_buff</ref><sp/>*request,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="command_8h_1a74a1d25a0884e5f20b60a1f1a719abf8" kindref="member">genl_info</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg_head;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="command_8h_1ae16c92b8b9283dc0983900820c5834b2" kindref="member">sk_buff</ref><sp/>*reply;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>reply<sp/>=<sp/>genlmsg_new(NLMSG_GOODSIZE,<sp/>GFP_KERNEL);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOMEM;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>the<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>msg_head<sp/>=<sp/>genlmsg_put(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reply,<sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>for<sp/>netlink<sp/>message:<sp/>struct<sp/>sk_buff<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>my<sp/>findings:<sp/>this<sp/>is<sp/>not<sp/>used<sp/>for<sp/>routing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>be<sp/>used<sp/>in<sp/>an<sp/>application<sp/>specific<sp/>way<sp/>to<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>endpoints<sp/>within<sp/>the<sp/>same<sp/>user<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>general<sp/>rule:<sp/>just<sp/>put<sp/>sender<sp/>port<sp/>id<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;snd_portid,<sp/></highlight><highlight class="comment">//<sp/>sending<sp/>port<sp/>(not<sp/>process)<sp/>id:<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;snd_seq,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence<sp/>number:<sp/>int<sp/>(might<sp/>be<sp/>used<sp/>by<sp/>receiver,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>mandatory)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="quantum__network__device__kernel__module_8c_1a2badde9dbcf798ac3a058da3b40067c6" kindref="member">gnl_qu_net_family</ref>,<sp/></highlight><highlight class="comment">//<sp/>struct<sp/>genl_family<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>flags<sp/>for<sp/>Netlink<sp/>header:<sp/>int;<sp/>application<sp/>specific<sp/>and<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mandatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>command/operation<sp/>(u8)<sp/>from<sp/>`enum<sp/>GNL_FOOBAR_XMPL_COMMAND`<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>Netlink<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qu__netlink_8h_1af99537bb275306b584c77cc401d75499afc5bea3aab361792214071df7eb8f540" kindref="member">GNL_QU_NET_C_REGISTER</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_head<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOMEM;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>nla_put_string(reply,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9c48e0024cb23af07010a5d8303be5b5" kindref="member">GNL_QU_NET_A_MSG</ref>,<sp/>msg))<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>nla_put_u32(reply,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9f63a8430ce7a80ba8773faef22d3bd0" kindref="member">GNL_QU_NET_A_ID</ref>,<sp/>assigned_device_id))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>genlmsg_end(reply,<sp/>msg_head);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/>genlmsg_reply(reply,<sp/>info);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occurred<sp/>in<sp/>%s():\n&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-rc;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>register_with_simulation_control_module()</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>sends<sp/>the<sp/>message<sp/>to<sp/>the<sp/>simulation<sp/>control<sp/>module</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>so<sp/>it<sp/>knows<sp/>about<sp/>the<sp/>new<sp/>hardware,<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>simulated</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="register_8c_1ad45ce3338ecbad4fd7f41b59b09aef94" kindref="member">register_with_simulation_control_module</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>assigned_device_id,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="command_8h_1a74a1d25a0884e5f20b60a1f1a719abf8" kindref="member">genl_info</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg_head;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="command_8h_1ae16c92b8b9283dc0983900820c5834b2" kindref="member">sk_buff</ref><sp/>*reply;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>mutex_lock(&amp;<ref refid="register_8c_1a36f6e8f51c49c00548335699f2e8d5f8" kindref="member">controller_module</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>reply<sp/>=<sp/>genlmsg_new(NLMSG_GOODSIZE,<sp/>GFP_KERNEL);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOMEM;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref>.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref>.snd_seq++;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>the<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>msg_head<sp/>=<sp/>genlmsg_put(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reply,<sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>for<sp/>netlink<sp/>message:<sp/>struct<sp/>sk_buff<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>my<sp/>findings:<sp/>this<sp/>is<sp/>not<sp/>used<sp/>for<sp/>routing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>be<sp/>used<sp/>in<sp/>an<sp/>application<sp/>specific<sp/>way<sp/>to<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>endpoints<sp/>within<sp/>the<sp/>same<sp/>user<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>general<sp/>rule:<sp/>just<sp/>put<sp/>sender<sp/>port<sp/>id<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref>.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref>.snd_portid,<sp/></highlight><highlight class="comment">//<sp/>sending<sp/>port<sp/>(not<sp/>process)<sp/>id:<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref>.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref>.snd_seq,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence<sp/>number:<sp/>int<sp/>(might<sp/>be<sp/>used<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>receiver,<sp/>but<sp/>not<sp/>mandatory)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="quantum__network__device__kernel__module_8c_1a2badde9dbcf798ac3a058da3b40067c6" kindref="member">gnl_qu_net_family</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>struct<sp/>genl_family<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>flags<sp/>for<sp/>Netlink<sp/>header:<sp/>int;<sp/>application<sp/>specific<sp/>and<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mandatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>command/operation<sp/>(u8)<sp/>from<sp/>`enum<sp/>GNL_FOOBAR_XMPL_COMMAND`<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>Netlink<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qu__netlink_8h_1af99537bb275306b584c77cc401d75499afc5bea3aab361792214071df7eb8f540" kindref="member">GNL_QU_NET_C_REGISTER</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_head<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOMEM;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>nla_put_string(reply,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9c48e0024cb23af07010a5d8303be5b5" kindref="member">GNL_QU_NET_A_MSG</ref>,<sp/>msg))<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>nla_put_u32(reply,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9f63a8430ce7a80ba8773faef22d3bd0" kindref="member">GNL_QU_NET_A_ID</ref>,<sp/>assigned_device_id))<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>genlmsg_end(reply,<sp/>msg_head);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/>genlmsg_unicast(genl_info_net(info),<sp/>reply,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref>.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref>.snd_portid);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occurred<sp/>in<sp/>%s():\n&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-rc;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>mutex_unlock(&amp;<ref refid="register_8c_1a36f6e8f51c49c00548335699f2e8d5f8" kindref="member">controller_module</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>gnl_qu_net_register_doit()</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>This<sp/>callback<sp/>function<sp/>is<sp/>called<sp/>when<sp/>a<sp/>command<sp/>GNL_QU_NET_C_REGISTER<sp/>is</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>received,<sp/>the<sp/>command<sp/>is<sp/>accompanied<sp/>by<sp/>a<sp/>device<sp/>type<sp/>enumeration.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>Only<sp/>one<sp/>simulation<sp/>control<sp/>module<sp/>can<sp/>be<sp/>registered<sp/>with<sp/>one<sp/>netlink</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>family.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="register_8c_1a190220f2a20542bd2788f9488b0c66c5" kindref="member">gnl_qu_net_register_doit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="command_8h_1ae16c92b8b9283dc0983900820c5834b2" kindref="member">sk_buff</ref><sp/>*sender_skb,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="command_8h_1a74a1d25a0884e5f20b60a1f1a719abf8" kindref="member">genl_info</ref><sp/>*info)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">nlattr<sp/>*na_dev_type;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">nlattr<sp/>*na_msg;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*recv_dev_type;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*recv_msg;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/>qu_dev;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>to<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="register_8h_1add57988c892c423bff906e04292510df" kindref="member">DEVICE_TYPE</ref><sp/>qu_dev_reg;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured<sp/>in<sp/>%s():<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>na_dev_type<sp/>=<sp/>info-&gt;attrs[<ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a3fc1633618daaee5ab0bb3668d13b6b0" kindref="member">GNL_QU_NET_A_DEV_TYPE</ref>];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>na_msg<sp/>=<sp/>info-&gt;attrs[<ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9c48e0024cb23af07010a5d8303be5b5" kindref="member">GNL_QU_NET_A_MSG</ref>];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!na_dev_type<sp/>||<sp/>!na_msg)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;no<sp/>info-&gt;attrs[%i]\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a3fc1633618daaee5ab0bb3668d13b6b0" kindref="member">GNL_QU_NET_A_DEV_TYPE</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;no<sp/>info-&gt;attrs[%i]\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9c48e0024cb23af07010a5d8303be5b5" kindref="member">GNL_QU_NET_A_MSG</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>recv_dev_type<sp/>=<sp/>nla_data(na_dev_type);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>recv_msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)nla_data(na_msg);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recv_msg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>receiving<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;New<sp/>quantum<sp/>device<sp/>registration<sp/>requested:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>qu_dev_reg<sp/>=<sp/><ref refid="register_8c_1a03ae670e432d5469a6409edf63703028" kindref="member">msg_to_DEVICE_TYPE</ref>(recv_dev_type);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Device<sp/>type:<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>qu_dev_reg);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qu_dev_reg<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>device<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qu_dev_reg<sp/>==<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa00e388716ff3da418e5aff724f3bb482" kindref="member">SIMULATION_CONTROL_MODULE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref>.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>!=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;Simulation<sp/>control<sp/>module<sp/>already<sp/>registered,<sp/>only<sp/>one<sp/>can<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;registered<sp/>at<sp/>a<sp/>time\nPlease<sp/>unregister<sp/>the<sp/>existing<sp/>module<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;first.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(-1,<sp/>sender_skb,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qu_dev.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa00e388716ff3da418e5aff724f3bb482" kindref="member">SIMULATION_CONTROL_MODULE</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qu_dev.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref><sp/>=<sp/>*info;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1ac76320e2b7fb3b31808d9f83ddf7f879" kindref="member">register_control_module</ref>(qu_dev);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(0,<sp/>sender_skb,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;New<sp/>quantum<sp/>device<sp/>succesfully<sp/>registered\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref>.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>==<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfaa17134b168b9b05103172e53022abceb" kindref="member">NOT_A_DEVICE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;Control<sp/>module<sp/>should<sp/>be<sp/>registered<sp/>first!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(-1,<sp/>sender_skb,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Registering<sp/>quantum<sp/>network<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>qu_dev.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa827b4082fd9c9336348abc0b84843ec5" kindref="member">QUANTUM_NETWORK_DEVICE</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>qu_dev.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref><sp/>=<sp/>*info;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>rr<sp/>=<sp/><ref refid="register_8c_1a749e78f7da7428b29fa80e380ec95cfb" kindref="member">register_device</ref>(qu_dev);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="register_8c_1ad45ce3338ecbad4fd7f41b59b09aef94" kindref="member">register_with_simulation_control_module</ref>(rr,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(rr,<sp/>sender_skb,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>Deregistration<sp/>callback<sp/>function</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="register_8c_1abdabf9dde5da39300c8e4a78ce7e6748" kindref="member">gnl_qu_net_deregister_doit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="command_8h_1ae16c92b8b9283dc0983900820c5834b2" kindref="member">sk_buff</ref><sp/>*sender_skb,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="command_8h_1a74a1d25a0884e5f20b60a1f1a719abf8" kindref="member">genl_info</ref><sp/>*info)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">nlattr<sp/>*na_dev_type;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">nlattr<sp/>*na_msg;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*recv_msg;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*recv_dev_type;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="register_8h_1add57988c892c423bff906e04292510df" kindref="member">DEVICE_TYPE</ref><sp/>qu_dev_reg;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resp;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">nlattr<sp/>*recv_id;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*id;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;%s()<sp/>invoked<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured<sp/>in<sp/>%s():<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>na_dev_type<sp/>=<sp/>info-&gt;attrs[<ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a3fc1633618daaee5ab0bb3668d13b6b0" kindref="member">GNL_QU_NET_A_DEV_TYPE</ref>];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>na_msg<sp/>=<sp/>info-&gt;attrs[<ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9c48e0024cb23af07010a5d8303be5b5" kindref="member">GNL_QU_NET_A_MSG</ref>];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!na_dev_type<sp/>||<sp/>!na_msg)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;no<sp/>info-&gt;attrs[%i]\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a3fc1633618daaee5ab0bb3668d13b6b0" kindref="member">GNL_QU_NET_A_DEV_TYPE</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;no<sp/>info-&gt;attrs[%i]\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9c48e0024cb23af07010a5d8303be5b5" kindref="member">GNL_QU_NET_A_MSG</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>recv_id<sp/>=<sp/>info-&gt;attrs[<ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9f63a8430ce7a80ba8773faef22d3bd0" kindref="member">GNL_QU_NET_A_ID</ref>];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!recv_id)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;no<sp/>info-&gt;attrs[%i]\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="qu__netlink_8h_1a15962a220cef4be7d59a700131ab7ac8a9f63a8430ce7a80ba8773faef22d3bd0" kindref="member">GNL_QU_NET_A_ID</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)nla_data(recv_id);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>recv_dev_type<sp/>=<sp/>nla_data(na_dev_type);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>recv_msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)nla_data(na_msg);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recv_msg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>receiving<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;New<sp/>deregistration<sp/>request:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>qu_dev_reg<sp/>=<sp/><ref refid="register_8c_1a03ae670e432d5469a6409edf63703028" kindref="member">msg_to_DEVICE_TYPE</ref>(recv_dev_type);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Device<sp/>type:<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>qu_dev_reg);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qu_dev_reg<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>device<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(-1,<sp/>sender_skb,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qu_dev_reg<sp/>==<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa00e388716ff3da418e5aff724f3bb482" kindref="member">SIMULATION_CONTROL_MODULE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="register_8c_1a2ed3992c3d405e0eb4aa780573641b56" kindref="member">control_module</ref>.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>!=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa00e388716ff3da418e5aff724f3bb482" kindref="member">SIMULATION_CONTROL_MODULE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;Simulation<sp/>control<sp/>module<sp/>is<sp/>not<sp/>registered!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(-1,<sp/>sender_skb,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/>qu_dev;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qu_dev.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa00e388716ff3da418e5aff724f3bb482" kindref="member">SIMULATION_CONTROL_MODULE</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qu_dev.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref><sp/>=<sp/>*info;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a455b15ec8fbbc1ca798dcdb2b785adc4" kindref="member">deregister_control_module</ref>(qu_dev);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Simulation<sp/>control<sp/>module<sp/>succesfully<sp/>deregistered!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(0,<sp/>sender_skb,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structqu__device" kindref="compound">qu_device</ref><sp/>qu_dev;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>qu_dev.<ref refid="structqu__device_1a655eeb6f5d2117995c910616d2b7d955" kindref="member">type</ref><sp/>=<sp/><ref refid="register_8h_1add57988c892c423bff906e04292510dfa827b4082fd9c9336348abc0b84843ec5" kindref="member">QUANTUM_NETWORK_DEVICE</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>qu_dev.<ref refid="structqu__device_1a3c07142317747445b6cabdbf93999b7c" kindref="member">info</ref><sp/>=<sp/>*info;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Just<sp/>before<sp/>entering<sp/>the<sp/>deregistration<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>resp<sp/>=<sp/><ref refid="register_8c_1a9fcb25e4070e6b3292a964056babb4c4" kindref="member">deregister_device</ref>(qu_dev,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="register_8c_1a5bdc81758e9e563d2e6ae042097c6116" kindref="member">register_response</ref>(resp,<sp/>sender_skb,<sp/>info,<sp/>recv_msg);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/register.c"/>
  </compounddef>
</doxygen>
